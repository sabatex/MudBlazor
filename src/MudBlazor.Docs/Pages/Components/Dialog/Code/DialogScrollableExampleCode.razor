@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="atSign">&#64;</span>inject IDialogService Dialog

<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">Variant</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Variant</span><span class="enumValue">.Outlined</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Primary</span><span class="quot">&quot;</span> <span class="htmlAttributeName"><span class="atSign">&#64;</span>onclick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue">OpenSimpleDialog</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Scrollable Dialog<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {
    <span class="keyword">bool</span> HideSourceSimpleDialog = <span class="keyword">true</span>;

    <span class="keyword">public</span> <span class="keyword">void</span> ShowSimpleDialogSource()
    {
        HideSourceSimpleDialog = !HideSourceSimpleDialog;
    }

    <span class="keyword">bool</span> license_accepted = <span class="keyword">false</span>;

    <span class="keyword">async</span> Task OpenSimpleDialog()
    {
        <span class="keyword">var</span> userSelect = Dialog.Show&lt;DialogScrollableExample_Dialog&gt;(<span class="string">&quot;MudBlazor License&quot;</span>);
        <span class="keyword">var</span> result = <span class="keyword">await</span> userSelect.Result;

        <span class="keyword">if</span> (!result.Cancelled)
        {
            license_accepted = (<span class="keyword">bool</span>)(result.Data ?? <span class="keyword">false</span>);
        }
    }
}
</pre></div>
</div>
