@* Auto-generated markup. Any changes will be overwritten *@
@namespace MudBlazor.Docs.Examples.Markup
<div class="mud-codeblock">
<div class="html"><pre>
<span class="atSign">&#64;</span>inject IDialogService Dialog

<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">OnClick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>((e) =&gt; OpenDialog(maxWidth))</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Open MaxWidth Dialog<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">OnClick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>((e) =&gt; OpenDialog(closeButton))</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Primary</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Close Button Dialog<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">OnClick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>((e) =&gt; OpenDialog(noHeader))</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Secondary</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>No header Dialog<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
<span class="htmlTagDelimiter">&lt;</span><span class="htmlElementName">MudButton</span> <span class="htmlAttributeName">OnClick</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="htmlAttributeValue"><span class="atSign">&#64;</span>((e) =&gt; OpenDialog(disableBackdropClick))</span><span class="quot">&quot;</span> <span class="htmlAttributeName">Color</span><span class="htmlOperator">=</span><span class="quot">&quot;</span><span class="enum">Color</span><span class="enumValue">.Tertiary</span><span class="quot">&quot;</span><span class="htmlTagDelimiter">&gt;</span>Disable backdrop dialog<span class="htmlTagDelimiter">&lt;/</span><span class="htmlElementName">MudButton</span><span class="htmlTagDelimiter">&gt;</span>
</pre></div>
<div class="csharp"><pre>
<span class="atSign">&#64;</span>code {
    DialogOptions maxWidth = <span class="keyword">new</span> DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = <span class="keyword">true</span> };
    DialogOptions closeButton = <span class="keyword">new</span> DialogOptions() { CloseButton = <span class="keyword">true</span> };
    DialogOptions noHeader = <span class="keyword">new</span> DialogOptions() {  NoHeader = <span class="keyword">true</span> };
    DialogOptions disableBackdropClick = <span class="keyword">new</span> DialogOptions() { DisableBackdropClick = <span class="keyword">true</span> };

    <span class="keyword">async</span> Task OpenDialog(DialogOptions options)
    {
        Dialog.Show&lt;DialogUsageExample_Dialog&gt;(<span class="string">&quot;Custom Options Dialog&quot;</span>, options);
    }
}
</pre></div>
</div>
